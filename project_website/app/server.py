import os
import subprocess
import json
from flask import Flask, request, jsonify, send_file

app = Flask(__name__)

# Get the absolute path of the /app folder
APP_FOLDER = os.path.dirname(os.path.abspath(__file__))

@app.route('/')
def index():
    return send_file('templates/index.html')

@app.route('/submit', methods=['POST'])
def run_simulation():
    # Get the data from the request
    data = request.json

    # Convert string values to numbers for each body
    for body in data['bodies']:
        body['x'] = float(body['x'])  # or int(body['x']) if they are integers
        body['y'] = float(body['y'])
        body['z'] = float(body['z'])
        body['mass'] = float(body['mass'])
        body['radius'] = float(body['radius'])
        body['rotationSpeed'] = float(body['rotationSpeed'])
        body['theta'] = float(body['theta'])
        body['phi'] = float(body['phi'])

    # Path to save the input JSON file inside the /app folder
    input_file_path = os.path.join(APP_FOLDER, 'input_data.json')

    # Save the input JSON file in the /app directory
    with open(input_file_path, 'w') as input_file:
        json.dump(data, input_file)

    # Path to the C++ binary inside /cpp folder
    cpp_binary_path = os.path.join(APP_FOLDER, 'cpp', 'simulation')

    # Path to the output file (generated by C++) inside the /app folder
    output_file_path = os.path.join(APP_FOLDER, 'output_data.txt')

    # Run the C++ binary and pass both input and output paths as arguments
    result = subprocess.run([cpp_binary_path, input_file_path, output_file_path], capture_output=True, text=True)

    if result.returncode != 0:
        return jsonify({'error': 'Simulation failed', 'details': result.stderr}), 500

    # Return the output file to the client
    return send_file(output_file_path, as_attachment=True)

if __name__ == '__main__':
    app.run(debug=True, port=5000)